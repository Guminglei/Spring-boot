server.port=9091
#log
#logging.level.root = debug
#或者
#debug=true

#配置logback.xml  目的将不同级别的日志打到相应的日志中
logging.config=classpath:logback-vclass.xml
logging.path=/home/logs/vclass/

#关闭banner的输出
#spring.main.banner-mode=off


## 数据源配置
spring.datasource.url=jdbc:mysql://localhost:3306/vk?zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8&rewriteBatchedStatements=true
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
###########################################################
##Druid Configuration
# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间d
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true

## Redis 配置
## Redis数据库索引（默认为0）
spring.redis.boot1.database=0
## Redis服务器地址
spring.redis.boot1.host-name=192.168.10.190
## Redis服务器连接端口
spring.redis.boot1.port=6379
## Redis服务器连接密码（默认为空）
spring.redis.password=
## 连接池最大连接数（使用负值表示没有限制）
spring.redis.boot1.pool.max-active=8
## 连接池最大阻塞等待时间（使用负值表示没有限制）
spring.redis.boot1.pool.max-wait=-1
## 连接池中的最大空闲连接
spring.redis.boot1.pool.max-idle=8
## 连接池中的最小空闲连接
spring.redis.boot1.pool.min-idle=0
## 连接超时时间（毫秒）
spring.redis.boot1.timeout=0

server.context-path=/vkyun/



